name: Deploy to vps

on:
  push:
    tags: [ "v*" ]    # trigger only when pushing tags like v1.0.0
  workflow_dispatch:   # optional: manual trigger

env:
  REGISTRY: ghcr.io

permissions:
  contents: read
  packages: write

jobs:
  deploy:
    name: Deploy to VPS (compose up -d, no .env changes)
    runs-on: ubuntu-latest
    needs: publish

    env:
      VPS_HOST: 57.128.201.144         
      VPS_USER: debian                   
      APP_DIR: /opt/employee-training-plan-app            # where compose & .env live on the VPS
      TAG: ${{ github.ref_name }}        # e.g., v1.2.3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare SSH key
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY_VPS }}
        run: |
          install -m 700 -d ~/.ssh
          printf "%s" "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts

      # Copy only compose file; DO NOT touch .env on the server
      - name: Copy docker-compose.yml to VPS
        run: |
          scp docker-compose.yml ${VPS_USER}@${VPS_HOST}:${APP_DIR}/

      - name: SSH docker login, pull & up (TAG from shell)
        env:
          GHCR_USER: ${{ github.actor }}
          GHCR_PAT:  ${{ secrets.GITHUB_TOKEN }}  # PAT with read:packages
        run: |
          ssh ${VPS_USER}@${VPS_HOST} '
            set -eu
            cd ${APP_DIR}

            # Ensure docker & compose plugin exist (optional guardrails)
            command -v docker >/dev/null
            docker compose version >/dev/null

            # Login to GHCR if pulling private images
            printf "%s" "${GITHUB_TOKEN}" | docker login ghcr.io -u "${GHCR_USER}" --password-stdin

            # IMPORTANT: Export TAG only for this command; shell var overrides .env
            TAG="'${TAG}'" docker compose pull
            TAG="'${TAG}'" docker compose up -d --remove-orphans

            docker image prune -f
          '