name: Deploy to vps

on:
  push:
    tags: [ "v*" ]    # trigger only when pushing tags like v1.0.0
  workflow_dispatch:   # optional: manual trigger

env:
  REGISTRY: ghcr.io

permissions:
  contents: read
  packages: write

jobs:
  publish:
    name: Build & push ${{ matrix.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: frontend
            context: frontend
            image: frontend
          - name: employee-training-plan
            context: backend/employee-training-plan
            image: employee-training-plan
          - name: discovery
            context: backend/discovery
            image: discovery
          - name: email-service
            context: backend/email-service
            image: email-service
          - name: gateway
            context: backend/gateway
            image: gateway
          - name: ms-notification
            context: backend/ms-notification
            image: ms-notification

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.image }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
          flavor: latest=false   # donâ€™t auto-tag as latest

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.context }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.image }}
          cache-to: type=gha,mode=max,scope=${{ matrix.image }}